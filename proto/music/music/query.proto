syntax = "proto3";

package music.music;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "music/music/params.proto";
import "music/music/song.proto";

option go_package = "music/x/music/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/music/music/params";
  
  }
  
  // Queries a list of ShowSong items.
  rpc ShowSong (QueryShowSongRequest) returns (QueryShowSongResponse) {
    option (google.api.http).get = "/music/music/show_song/{id}";
  
  }
  
  // Queries a list of ListPlaylist items.
  rpc ListPlaylist (QueryListPlaylistRequest) returns (QueryListPlaylistResponse) {
    option (google.api.http).get = "/music/music/list_playlist/{playlist}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowSongRequest {
  uint64 id = 1;
}

message QueryShowSongResponse {
  Song song = 1;
}

message QueryListPlaylistRequest {
  uint64                                playlist   = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListPlaylistResponse {
  repeated Song                         song       = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

